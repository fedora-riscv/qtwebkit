diff -up webkit-qtwebkit-23/Source/WTF/wtf/dtoa.cpp.ppc64le webkit-qtwebkit-23/Source/WTF/wtf/dtoa.cpp
--- webkit-qtwebkit-23/Source/WTF/wtf/dtoa.cpp.ppc64le	2014-09-24 06:42:05.000000000 -0500
+++ webkit-qtwebkit-23/Source/WTF/wtf/dtoa.cpp	2014-10-16 11:06:24.935086905 -0500
@@ -113,7 +113,7 @@ static ALWAYS_INLINE uint32_t* storeInc(
 #define Big0 (Frac_mask1 | Exp_msk1 * (DBL_MAX_EXP + Bias - 1))
 #define Big1 0xffffffff
 
-#if CPU(PPC64) || CPU(X86_64)
+#if CPU(PPC64) || CPU(X86_64) || CPU(PPC64LE)
 // FIXME: should we enable this on all 64-bit CPUs?
 // 64-bit emulation provided by the compiler is likely to be slower than dtoa own code on 32-bit hardware.
 #define USE_LONG_LONG
diff -up webkit-qtwebkit-23/Source/WTF/wtf/dtoa/utils.h.ppc64le webkit-qtwebkit-23/Source/WTF/wtf/dtoa/utils.h
--- webkit-qtwebkit-23/Source/WTF/wtf/dtoa/utils.h.ppc64le	2014-10-16 11:06:24.935086905 -0500
+++ webkit-qtwebkit-23/Source/WTF/wtf/dtoa/utils.h	2014-10-16 11:10:04.207685227 -0500
@@ -49,7 +49,7 @@
 defined(__ARMEL__) || \
 defined(_MIPS_ARCH_MIPS32R2)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
-#elif CPU(MIPS) || CPU(PPC) || CPU(PPC64) || OS(WINCE) || CPU(SH4) || CPU(S390) || CPU(S390X) || CPU(IA64) || CPU(SPARC) || CPU(ALPHA) || CPU(MIPS64) || CPU(AARCH64) || CPU(HPPA)
+#elif CPU(MIPS) || CPU(PPC) || CPU(PPC64) || CPU(PPC64LE) || OS(WINCE) || CPU(SH4) || CPU(S390) || CPU(S390X) || CPU(IA64) || CPU(SPARC) || CPU(ALPHA) || CPU(MIPS64) || CPU(AARCH64) || CPU(HPPA)
 #define DOUBLE_CONVERSION_CORRECT_DOUBLE_OPERATIONS 1
 #elif defined(_M_IX86) || defined(__i386__)
 #if defined(_WIN32)
diff -up webkit-qtwebkit-23/Source/WTF/wtf/Platform.h.ppc64le webkit-qtwebkit-23/Source/WTF/wtf/Platform.h
--- webkit-qtwebkit-23/Source/WTF/wtf/Platform.h.ppc64le	2014-10-16 11:06:24.936086920 -0500
+++ webkit-qtwebkit-23/Source/WTF/wtf/Platform.h	2014-10-16 11:09:08.735022008 -0500
@@ -130,6 +130,17 @@
 #endif
 #endif
 
+/* CPU(PPC64) - PowerPC 64-bit + LITTLE ENDIAN */
+#if (   defined(__ppc64__) \
+     || defined(__PPC64__) \
+     || defined(__ppc64le__) \
+     || defined(__PPC64LE__)) \
+    && defined(__BYTE_ORDER__) \
+    && (__BYTE_ORDER__==__ORDER_LITTLE_ENDIAN__)
+#define WTF_CPU_PPC64LE 1
+#define WTF_CPU_LITTLE_ENDIAN 1
+#endif
+
 /* CPU(SH4) - SuperH SH-4 */
 #if defined(__SH4__)
 #define WTF_CPU_SH4 1
